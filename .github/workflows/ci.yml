name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        uv venv --python ${{ matrix.python-version }}
        uv pip install -e ".[dev]"

    - name: Check code formatting with black
      run: uv run black --check .

    - name: Check import sorting with isort
      run: uv run isort --check-only .

    - name: Lint with flake8
      run: uv run flake8 .

    - name: Type check with mypy
      run: uv run mypy hello.py

    - name: Test with pytest
      run: uv run pytest --cov=. --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  integration-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Set up Python
      run: uv python install 3.11

    - name: Install dependencies
      run: |
        uv venv
        uv pip install -e ".[dev]"

    - name: Test CLI functionality
      run: |
        # Test basic functionality
        uv run python hello.py
        
        # Test with arguments
        uv run python hello.py --name "GitHub Actions"
        
        # Test verbose mode
        uv run python hello.py --verbose
        
        # Test help
        uv run python hello.py --help